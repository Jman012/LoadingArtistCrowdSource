<div class="d-flex flex-row">
	<div style="flex: 1 1 0;">
		<div class="h-100 w-100 align-items-center d-flex flex-row justify-content-end">
			@if (ShowFirst)
			{
				<NavLink href="@($"/comic/{System.Web.HttpUtility.UrlEncode(ComicPage.FirstComicCode)}")" class="btn btn-link">First</NavLink>
			}
			@if (ShowPrevious)
			{
				<NavLink href="@($"/comic/{System.Web.HttpUtility.UrlEncode(ComicPage.PreviousComicCode)}")" class="btn btn-link">Previous</NavLink>
			}
		</div>
	</div>
	<div>
		<NavLink href="/random" class="btn btn-link">Random</NavLink>
	</div>
	<div style="flex: 1 1 0;">
		<div class="h-100 w-100 align-items-center d-flex flex-row justify-content-start">
			@if (ShowNext)
			{
				<NavLink href="@($"/comic/{System.Web.HttpUtility.UrlEncode(ComicPage.NextComicCode)}")" class="btn btn-link">Next</NavLink>
			}
			@if (ShowLatest)
			{
				<NavLink href="@($"/comic/{System.Web.HttpUtility.UrlEncode(ComicPage.LatestComicCode)}")" class="btn btn-link">Latest</NavLink>
			}
		</div>
	</div>
</div>

@code {
	[Parameter]
	public ComicPageViewModel ComicPage { get; set; } = new ComicPageViewModel();

	private bool ShowFirst => ComicPage.FirstComicCode != null && ComicPage.ComicViewModel.Code != ComicPage.FirstComicCode;
	private bool ShowPrevious => ComicPage.PreviousComicCode != null && ComicPage.ComicViewModel.Code != ComicPage.PreviousComicCode;
	private bool ShowNext => ComicPage.NextComicCode != null && ComicPage.ComicViewModel.Code != ComicPage.NextComicCode;
	private bool ShowLatest => ComicPage.LatestComicCode != null && ComicPage.ComicViewModel.Code != ComicPage.LatestComicCode;
}
