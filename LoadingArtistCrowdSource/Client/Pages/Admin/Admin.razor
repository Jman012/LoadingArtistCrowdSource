@page "/admin"
@using System.IO
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize(Roles = LoadingArtistCrowdSource.Shared.Enums.Roles.Administrator)]
@inject LoadingArtistCrowdSource.Client.Services.LACSApi Api
@inject IToastService ToastService

<Container Fluid="false">
	<h1>Admin</h1>

	<Row Class="mb-3">
		<Column>
			<h3>Import New Comics</h3>
			<Button Color="Color.Primary" Clicked="HandleImportNewComics" Disabled="_isLoadingImportNewComics">
				@if (_isLoadingImportNewComics)
				{
					<Spinner Inline="true" Small="true" /><text>&nbsp;</text>
				}
				Import
			</Button>
		</Column>
	</Row>

	<Row Class="mb-3">
		<Column>
			<h3>Set user roles</h3>
			<EditForm Model="_setUserRolesVm" OnValidSubmit="HandleValidSetUserRolesSubmit">
				<DataAnnotationsValidator />
				<Microsoft.AspNetCore.Components.Forms.ValidationSummary />

				<FormTextfield @bind-Value="@_setUserRolesVm.Username" />
				@foreach (var userRoleItem in _setUserRolesVm.UserRoles)
				{
					<div class="form-group form-check">
						<InputCheckbox id="@userRoleItem.Role" 
									   name="@userRoleItem.Role"
									   class="form-check-input"
									   @bind-Value="userRoleItem.Include" />

						<label for="@userRoleItem.Role">@userRoleItem.Role</label>
					</div>
				}
				<Button Type="ButtonType.Submit" Color="Color.Primary">Submit</Button>
			</EditForm>
		</Column>
	</Row>

</Container>

@code {
	private IBrowserFile? _importFeedFile;
	private bool _isLoadingImportNewComics;

	private AdminSetUserRolesViewModel _setUserRolesVm = new AdminSetUserRolesViewModel();

	protected override void OnInitialized()
	{
		_setUserRolesVm.UserRoles.Add(new AdminSetUserRoleItemViewModel() { Role = LoadingArtistCrowdSource.Shared.Enums.Roles.Administrator, Include = false });
		_setUserRolesVm.UserRoles.Add(new AdminSetUserRoleItemViewModel() { Role = LoadingArtistCrowdSource.Shared.Enums.Roles.Moderator, Include = false });
		base.OnInitialized();
	}

	private void HandleImportFeedFile(InputFileChangeEventArgs e)
	{
		_importFeedFile = e.File;
	}

	private async Task HandleImportNewComics()
	{
		try
		{
			_isLoadingImportNewComics = true;
			var result = await Api.ImportNewComics();
			ToastService.ShowSuccess(result);
			_isLoadingImportNewComics = false;
		}
		catch (AccessTokenNotAvailableException ex)
		{
			_isLoadingImportNewComics = false;
			ex.Redirect();
		}
		catch (System.Net.Http.HttpRequestException ex)
		{
			_isLoadingImportNewComics = false;
			ToastService.ShowError(ex.Message);
		}
		_isLoadingImportNewComics = false;
	}

	private async Task HandleValidSetUserRolesSubmit()
	{
		try
		{
			ToastService.ShowInfo(await Api.SetUserRoles(_setUserRolesVm));
		}
		catch (AccessTokenNotAvailableException ex)
		{
			_isLoadingImportNewComics = false;
			ex.Redirect();
		}
	}
}
