<a role="button" href="" id="@_headerId" class="@ButtonClass" title="@_titleText" aria-expanded="@_ariaExpanded" aria-controls="@_collapseId" @onclick="Toggle" @onclick:preventDefault="true">
	@HeaderContent(_isCollapsedCurrent)
</a>

<div id="@_collapseId" class="@_stateClass @ChildClass" aria-labelledby="@_headerId">
	@ChildContent(_isCollapsedCurrent)
</div>


@code {
	private bool _isCollapsed;
	[Parameter]
	public bool IsCollapsed { get; set; }
	[Parameter]
	public string IdPrefix { get; set; } = "";
	[Parameter]
	public string ButtonClass { get; set; } = "";
	[Parameter]
	public string ChildClass { get; set; } = "";
	[Parameter]
	public RenderFragment<bool> HeaderContent { get; set; } = null!;
	[Parameter]
	public RenderFragment<bool> ChildContent { get; set; } = null!;

	private bool _isCollapsedCurrent { get; set; }
	private string _titleText => $"Click to {(_isCollapsedCurrent ? "expand" : "collapse")}";
	private string _ariaExpanded => _isCollapsedCurrent ? "false" : "true";
	private string _stateClass => _isCollapsedCurrent ? "d-none" : "";
	private string _headerId => $"{IdPrefix}_Header";
	private string _collapseId => $"{IdPrefix}_Collapse";

	protected override void OnInitialized()
	{
		_isCollapsedCurrent = IsCollapsed;
		base.OnInitialized();
	}

	protected override void OnParametersSet()
	{
		if (_isCollapsed != IsCollapsed)
		{
			_isCollapsedCurrent = _isCollapsed = IsCollapsed;
		}
		base.OnParametersSet();
	}

	public void Toggle()
	{
		_isCollapsedCurrent = !_isCollapsedCurrent;
	}

	public void Expand()
	{
		_isCollapsedCurrent = false;
	}

	public void Collapse()
	{
		_isCollapsedCurrent = true;
	}
}
