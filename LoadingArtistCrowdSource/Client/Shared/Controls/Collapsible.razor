<a role="button" href="" id="@HeaderId" class="@ButtonClass" title="@TitleText" aria-expanded="@AriaExpanded" aria-controls="@CollapseId" @onclick="Toggle" @onclick:preventDefault="true">
	@HeaderContent(isCollapsed)
</a>

<div id="@CollapseId" class="@StateClass @ChildClass" aria-labelledby="@HeaderId">
	@ChildContent(isCollapsed)
</div>


@code {
	private bool _isCollapsed { get; set; }
	[Parameter]
	public bool IsCollapsed { get; set; }

	[Parameter]
	public string IdPrefix { get; set; } = "";

	[Parameter]
	public string ButtonClass { get; set; } = "";

	[Parameter]
	public string ChildClass { get; set; } = "";

	[Parameter]
	public RenderFragment<bool> HeaderContent { get; set; } = null!;

	[Parameter]
	public RenderFragment<bool> ChildContent { get; set; } = null!;

	private bool isCollapsed { get; set; }
	private string TitleText => $"Click to {(isCollapsed ? "expand" : "collapse")}";
	private string AriaExpanded => isCollapsed ? "false" : "true";
	private string StateClass => isCollapsed ? "d-none" : "";
	private string HeaderId => $"{IdPrefix}_Header";
	private string CollapseId => $"{IdPrefix}_Collapse";

	protected override void OnInitialized()
	{
		isCollapsed = IsCollapsed;
		base.OnInitialized();
	}

	protected override void OnParametersSet()
	{
		if (_isCollapsed != IsCollapsed)
		{
			isCollapsed = _isCollapsed = IsCollapsed;
		}
		base.OnParametersSet();
	}

	public void Toggle()
	{
		isCollapsed = !isCollapsed;
	}

	public void Expand()
	{
		isCollapsed = false;
	}

	public void Collapse()
	{
		isCollapsed = true;
	}
}
